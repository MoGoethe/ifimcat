{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","queries/index.js","utils/validate.js","views/users/register/Register.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","gql","M_LOGIN","Q_CURRENT_USER","M_REGISTER","Q_GETADMINBLOGS","M_UPDATEBLOG","Q_GETBLOGBYKEY","M_CREATEBLOG","Q_GETCATEGORIES","M_UPDATECATEGORY","M_DELETECATEGORY","M_CREATECATEGORY","Q_GETTAGS","M_UPDATETAG","M_DELETETAG","M_CREATETAG","Q_GETTOPICS","M_UPDATETOPIC","M_DELETETOPIC","M_CREATETOPIC","Q_GETUSERS","M_UPDATEUSER","M_UPLOAD","emailRegexp","isEmail","email","Register","useState","username","setUsername","setEmail","password","setPassword","rePassword","setRePassword","usernameValidate","setUsernameValidate","emailValidate","setEmailValidate","passwordValidate","setPasswordValidate","rePasswordValidate","setRePasswordValidate","show","title","info","color","modal","setModal","useMutation","variables","onCompleted","register","onError","message","graphQLErrors","extensions","exception","response","loading","toggle","className","md","lg","xl","type","placeholder","onChange","e","target","autoComplete","disabled","onClick","invalid","valid","block","to","onClose","closeButton"],"mappings":"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","file":"static/js/15.798b1248.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import gql from 'graphql-tag';\n\n// test\nexport const TEST_SERVER = gql `\n  query {\n    hello\n  }\n`;\n\n// user ---------------------------------------------------------------------------\n// 登录\nexport const M_LOGIN = gql `\n  mutation ($email: String!, $password: String!) {\n    login(data: {\n      email: $email,\n      password: $password,\n    }) {\n      id\n      username\n      email\n      roles\n    }\n  }\n`;\n// 获取当前登陆用户信息\nexport const Q_CURRENT_USER = gql `\n  query {\n    currentUser{\n      id\n      username\n      email\n      roles\n    }\n  }\n`;\n// 注册\nexport const M_REGISTER = gql `\n  mutation ($username: String!, $email: String!, $password: String!) {\n    register(data: {\n      email: $email,\n      username: $username,\n      password: $password,\n    }) {\n      id\n      username\n      email\n    }\n  }\n`;\n\n// blogs ---------------------------------------------------------------------------\n// 获取能管理的博客列表\nexport const Q_GETADMINBLOGS = gql `\n  query {\n    getAdminBlogs {\n      id\n      key\n      title\n      description\n      body\n      tags {\n        id\n        key\n        name\n      }\n      topic {\n        id\n        key\n        name\n      }\n      category {\n        id\n        key\n        name\n      }\n      awesome\n      glance\n      is_show\n      author {\n        username\n      }\n      updateAt\n      createAt\n    }\n  }\n`;\n// 保存更改\nexport const M_UPDATEBLOG = gql `\n  mutation($data: UpdateBlogInput!) {\n    updateBlog(data: $data) {\n      id\n      key\n      title\n      description\n      body\n      draft\n      tags {\n        id\n        key\n        name\n      }\n      topic {\n        id\n        key\n        name\n      }\n      category {\n        id\n        key\n        name\n      }\n      awesome\n      glance\n      is_show\n    }\n  }\n`;\n// 通过key获取博客详情\nexport const Q_GETBLOGBYKEY = gql `\n  query($key: String!) {\n    getBlogByKey(key: $key){\n      id\n      key\n      title\n      description\n      body\n      draft\n      tags {\n        id\n        key\n        name\n      }\n      topic {\n        id\n        key\n        name\n      }\n      category {\n        id\n        key\n        name\n      }\n      awesome\n      glance\n      is_show\n    }\n  }\n`;\n// 创建新博客\nexport const M_CREATEBLOG = gql`\n  mutation($data: CreateBlogInput!) {\n    createBlog(data: $data) {\n      id\n      key\n      title\n      description\n      body\n      draft\n      tags {\n        id\n        key\n        name\n      }\n      topic {\n        id\n        key\n        name\n      }\n      category {\n        id\n        key\n        name\n      }\n      awesome\n      glance\n      is_show\n    }\n  }\n`;\n\n// categiries ---------------------------------------------------------------------------\n// 获取分类列表\nexport const Q_GETCATEGORIES = gql`\n  query {\n    getCategories {\n      id\n      key\n      name\n      slogan\n      description\n      author {\n        username\n      }\n      blogs {\n        key\n      }\n      createAt\n      updateAt\n    }\n  }\n`;\n// 更新类别\nexport const M_UPDATECATEGORY = gql`\n  mutation($data: UpdateCategoryInput!) {\n    updateCategory(data: $data) {\n      id\n      name\n    }\n  }\n`;\n// 删除类别\nexport const M_DELETECATEGORY = gql`\n  mutation($id: Float!) {\n    deleteCategory(id: $id) {\n      name\n      key\n    }\n  }\n`;\n// 新增类别\nexport const M_CREATECATEGORY = gql `\n  mutation($data: CreateCategoryInput!) {\n    createCategory(data: $data) {\n      name\n    }\n  }\n`;\n\n// tags ---------------------------------------------------------------------------\n// 获取标签列表\nexport const Q_GETTAGS = gql `\n  query {\n    getTags {\n      id\n      key\n      name\n      slogan\n      description\n      author {\n        username\n      }\n      blogs {\n        key\n      }\n      createAt\n      updateAt\n    }\n  }\n`;\n// 更新标签\nexport const M_UPDATETAG = gql `\n  mutation($data: UpdateTagInput!) {\n    updateTag(data: $data) {\n      id\n      name\n    }\n  }\n`;\n// 删除标签\nexport const M_DELETETAG = gql `\n  mutation($id: Float!){\n    deleteTag(id: $id) {\n      name\n      key\n    }\n  }\n`;\n// 新增标签\nexport const M_CREATETAG = gql `\n  mutation($data: CreateTagInput!) {\n    createTag(data: $data) {\n      name\n    }\n  }\n`;\n\n// topics ---------------------------------------------------------------------------\n// 获取专题列表\nexport const Q_GETTOPICS = gql `\n  query {\n    getTopics {\n      id\n      key\n      name\n      slogan\n      description\n      author {\n        username\n      }\n      blogs {\n        key\n      }\n      createAt\n      updateAt\n    }\n  }\n`;\n// 更新专题名称\nexport const M_UPDATETOPIC = gql `\n  mutation($data: UpdateTopicInput!) {\n    updateTopic(data: $data) {\n      id\n      name\n    }\n  }\n`;\n// 删除专题\nexport const M_DELETETOPIC = gql `\n  mutation($id: Float!){\n    deleteTopic(id: $id) {\n      name\n      key\n    }\n  }\n`;\n// 新增专题\nexport const M_CREATETOPIC = gql `\n  mutation($data: CreateTopicInput!) {\n    createTopic(data: $data) {\n      name\n    }\n  }\n`;\n\n\n// topics ---------------------------------------------------------------------------\n// 获取用户列表\nexport const Q_GETUSERS = gql`\n  query{\n    getUsers{\n      id\n      key\n      email\n      username\n      forbid\n      roles\n      blogs {\n        id\n      }\n      createAt\n    }\n  }\n`;\n// 更新用户\nexport const M_UPDATEUSER = gql`\n  mutation($data: UpdateUserInput!) {\n    updateUser(data: $data) {\n      email\n      username\n      roles\n    }\n  }\n`;\n\n// 图片上传\nexport const M_UPLOAD = gql`\n  mutation($file: Upload!) {\n    fileUpload(file: $file)\n  }\n`;","const emailRegexp = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\nexport const isEmail = email => emailRegexp.test(email);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n  CModal,\n  CModalHeader,\n  CModalBody,\n  CModalFooter,\n  CInvalidFeedback,\n} from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { M_REGISTER } from '../../../queries';\nimport { isEmail } from '../../../utils/validate'; \n\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rePassword, setRePassword] = useState('');\n  const [usernameValidate, setUsernameValidate] = useState({});\n  const [emailValidate, setEmailValidate] = useState({});\n  const [passwordValidate, setPasswordValidate] = useState({});\n  const [rePasswordValidate, setRePasswordValidate] = useState({});\n  const [modal, setModal] = useState({show: false, title: '', info: '', color: ''});\n  const [register, {loading}] = useMutation(M_REGISTER, {\n    variables: {\n      email,\n      username,\n      password,\n    },\n    onCompleted: ({ register }) => {\n      if (register) {\n        setModal({\n          show: true,\n          title: '注册成功',\n          info: `欢迎你${register.username}，我们已经向你${register.email}发送了确认邮件，快去确认使用吧！`,\n          color: 'success'\n        });\n      }\n    },\n    onError: ({graphQLErrors}) => {\n      const { message } = graphQLErrors[0].extensions.exception.response;\n      setModal({show: true, title: '错误', info: message[0], color: 'danger'});\n    }\n  });\n\n  const toggle = () => {\n    setModal({show: !modal.show});\n  }\n\n  const submit = () => {\n    if (username.length < 4) {\n      setUsernameValidate({invalid: true, message: \"昵称长度不能低于4\"});\n      return;\n    }\n    setUsernameValidate({valid: true})\n    if (!isEmail(email)) {\n      setEmailValidate({invalid: true, message: \"邮箱格式错误\"});\n      return;\n    }\n    setEmailValidate({valid: true})\n    if (password.length < 4) {\n      setPasswordValidate({invalid: true, message: \"密码长度不能低于6\"});\n      return;\n    }\n    setPasswordValidate({valid: true})\n    if (rePassword !== password) {\n      setRePasswordValidate({invalid: true, message: \"两次密码输入不一致\"});\n      return;\n    }\n    setRePasswordValidate({valid: true});\n    register();\n  }\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center user-bg--full\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm className=\"user-form\">\n                  <h1>注册</h1>\n                  <p className=\"text-muted\">创建你的管理端账户</p>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"用户名\"\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                      autoComplete=\"username\"\n                      {...usernameValidate}\n                    />\n                    <CInvalidFeedback>{usernameValidate.message}</CInvalidFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"邮箱\"\n                      autoComplete=\"email\"\n                      value={email}\n                      onChange={e => setEmail(e.target.value)}\n                      {...emailValidate}\n                    />\n                    <CInvalidFeedback>{emailValidate.message}</CInvalidFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"密码\"\n                      autoComplete=\"new-password\"\n                      value={password}\n                      onChange={e => setPassword(e.target.value)}\n                      {...passwordValidate}\n                    />\n                    <CInvalidFeedback>{passwordValidate.message}</CInvalidFeedback>\n                  </CInputGroup>\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"再次输入密码\"\n                      autoComplete=\"new-password\"\n                      value={rePassword}\n                      onChange={e => setRePassword(e.target.value)}\n                      {...rePasswordValidate}\n                    />\n                    <CInvalidFeedback>{rePasswordValidate.message}</CInvalidFeedback>\n                  </CInputGroup>\n                  <CButton color=\"success\" disabled={loading} onClick={() => submit()} block>创建账户</CButton>\n                </CForm>\n              </CCardBody>\n              <CCardFooter className=\"p-4\">\n                <CRow>\n                  <p>已有账户，<Link to=\"/login\">立即登录</Link></p>\n                </CRow>\n              </CCardFooter>\n            </CCard>\n            <CModal\n              show={modal.show}\n              onClose={toggle}\n              color={modal.color}\n            >\n              <CModalHeader closeButton>{modal.title}</CModalHeader>\n              <CModalBody>{modal.info}</CModalBody>\n              <CModalFooter>\n                <CButton onClick={toggle} color={modal.color || 'info'}>我知道了</CButton>\n              </CModalFooter>\n            </CModal>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Register\n"],"sourceRoot":""}