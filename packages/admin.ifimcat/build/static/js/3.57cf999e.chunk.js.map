{"version":3,"sources":["../../src/data/OperationData.ts","../../src/data/QueryData.ts","../../src/utils/useBaseQuery.ts","../../src/utils/useDeepMemo.ts","../../src/useQuery.ts","../../src/data/MutationData.ts","../../src/useMutation.ts","../../src/data/SubscriptionData.ts","../../src/ssr/RenderPromises.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/graphql-tag/src/index.js","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/polyfills/symbols.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs"],"names":["options","context","isMounted","previousOptions","this","getOptions","setOptions","newOptions","storePrevious","isEqual","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","onNewData","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","lazy","handleErrorOrCompleted","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","currentResult","partial","errors","length","graphQLErrors","partialRefetch","resetQueryStoreErrors","onCompleted","onError","unsubscribe","OperationData","useBaseQuery","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","QueryData","Promise","resolve","then","memoFn","key","ref","value","useDeepMemo","queryResult","useQuery","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","mutationContext","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","MutationData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","parse","require","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","Error","stripLoc","removeLocAtThisLevel","docType","prototype","toString","call","map","d","loc","startToken","endToken","valueType","ast","astFragmentMap","definitions","i","fragmentDefinition","fragmentName","name","sourceKey","source","body","substring","start","end","console","warn","processFragments","gql","args","Array","arguments","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","module","exports","devAssert","condition","message","Boolean","_typeof","obj","Symbol","iterator","constructor","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","position","match","lineRegexp","line","column","exec","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","fn","Function","indexOf","TypeError","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","a","instance","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","GraphQLError","_Error","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","Derived","hasNativeReflectConstruct","Super","NewTarget","_createSuper","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_this","_classCallCheck","_nodes$0$loc","_nodes","isArray","_source","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","locations","stack","captureStackTrace","output","_i2","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Kind","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","Source","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","Token","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","dedentBlockStringValue","readBlockString","charCode","b","c","char2hex","invalidSequence","readString","unexpectedCharacterMessage","Parser","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","sourceObj","inspect","_lexer","_options","parseName","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","parseList","parseObject","parseStringLiteral","block","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","_this$_options4","noLocation","Location","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind"],"mappings":"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","file":"static/js/3.57cf999e.chunk.js","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport {\n  ApolloContextValue,\n  parser,\n  DocumentType,\n  operationName\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { CommonOptions } from '../types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: ApolloContextValue = {};\n  public client: ApolloClient<object> | undefined;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: ApolloContextValue) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !isEqual(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import {\n  ApolloQueryResult,\n  ApolloError,\n  NetworkStatus,\n  FetchMoreOptions,\n  FetchMoreQueryOptions,\n  UpdateQueryOptions,\n  SubscribeToMoreOptions,\n} from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  QueryResult,\n  ObservableQueryFields,\n} from '@apollo/react-common';\n\nimport {\n  QueryPreviousData,\n  QueryOptions,\n  QueryCurrentObservable,\n  QueryTuple,\n  QueryLazyOptions,\n} from '../types';\nimport { OperationData } from './OperationData';\n\nexport class QueryData<TData, TVariables> extends OperationData {\n  public onNewData: () => void;\n\n  private previousData: QueryPreviousData<TData, TVariables> = {};\n  private currentObservable: QueryCurrentObservable<TData, TVariables> = {};\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n\n  constructor({\n    options,\n    context,\n    onNewData,\n  }: {\n    options: QueryOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previousData.query) {\n      this.removeQuerySubscription();\n      this.previousData.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    if (this.isMounted) this.startQuerySubscription();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined,\n          } as QueryResult<TData, TVariables>,\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<ApolloQueryResult<any>> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n\n    // currentObservable.query is already assigned the registered SSR observable in initializeObservableQuery.\n    const obs = this.currentObservable.query!;\n    const currentResult = obs.getCurrentResult();\n    return currentResult.loading ? obs.result() : false;\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = this.getOptions();\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    delete this.currentObservable.query;\n    delete this.previousData.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables,\n      };\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context,\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteResult = (): QueryResult<TData, TVariables> => {\n    const result = this.getQueryResult();\n    this.startQuerySubscription();\n    return result;\n  };\n\n  private getExecuteSsrResult() {\n    const ssrDisabled = this.getOptions().ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client,\n      ...this.observableQueryFields(),\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previousData.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    let result;\n    if (this.ssrInitiated()) {\n      result =\n        this.context.renderPromises!.addQueryPromise(\n          this,\n          this.getExecuteResult\n        ) || ssrLoading;\n    }\n\n    return result;\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n      metadata: { reactComponent: { displayName } },\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable.query = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable.query) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previousData.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: null,\n      };\n      this.currentObservable.query = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions,\n      });\n\n      if (this.ssrInitiated()) {\n        this.context?.renderPromises?.registerSSRObservable(\n          this.currentObservable.query,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable.query) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: null,\n    };\n\n    if (\n      !isEqual(\n        newObservableQueryOptions,\n        this.previousData.observableQueryOptions\n      )\n    ) {\n      this.previousData.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .query!.setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  private startQuerySubscription() {\n    if (this.currentObservable.subscription || this.getOptions().skip) return;\n\n    const obsQuery = this.currentObservable.query!;\n    this.currentObservable.subscription = obsQuery.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previousData.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          isEqual(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        this.onNewData();\n      },\n      error: (error) => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previousData.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !isEqual(error, this.previousData.error)\n        ) {\n          this.previousData.error = error;\n          this.onNewData();\n        }\n      },\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const lastError = this.currentObservable.query!.getLastError();\n    const lastResult = this.currentObservable.query!.getLastResult();\n    this.currentObservable.query!.resetLastResults();\n    this.startQuerySubscription();\n    Object.assign(this.currentObservable.query!, {\n      lastError,\n      lastResult,\n    });\n  }\n\n  private getQueryResult(): QueryResult<TData, TVariables> {\n    let result: any = this.observableQueryFields();\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        called: true,\n      };\n    } else {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.query!.getCurrentResult();\n      const { loading, partial, networkStatus, errors } = currentResult;\n      let { error, data } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        loading,\n        networkStatus,\n        error,\n        called: true,\n      };\n\n      if (loading) {\n        const previousData =\n          this.previousData.result && this.previousData.result.data;\n        result.data =\n          previousData && data\n            ? {\n                ...previousData,\n                ...data,\n              }\n            : previousData || data;\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.query!.getLastResult() || ({} as any))\n            .data,\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.query!.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          !data &&\n          partial &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading,\n          });\n          result.refetch();\n          return result;\n        }\n\n        result.data = data;\n      }\n    }\n\n    result.client = this.client;\n    this.previousData.loading =\n      (this.previousData.result && this.previousData.result.loading) || false;\n    this.previousData.result = result;\n\n    // Any query errors that exist are now available in `result`, so we'll\n    // remove the original errors from the `ObservableQuery` query store to\n    // make sure they aren't re-displayed on subsequent (potentially error\n    // free) requests/responses.\n    this.currentObservable.query &&\n      this.currentObservable.query.resetQueryStoreErrors();\n\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    const obsQuery = this.currentObservable.query;\n    if (!obsQuery || !this.previousData.result) return;\n\n    const { data, loading, error } = this.previousData.result;\n\n    if (!loading) {\n      const { query, variables, onCompleted, onError } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previousData.loading &&\n        isEqual(this.previousOptions.query, query) &&\n        isEqual(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error) {\n        onCompleted(data);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n\n  private obsRefetch = (variables?: TVariables) =>\n    this.currentObservable.query!.refetch(variables);\n\n  private obsFetchMore = <K extends keyof TVariables>(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, K> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable.query!.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable.query!.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable &&\n      this.currentObservable.query! &&\n      this.currentObservable.query!.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable.query!.subscribeToMore(options);\n\n  private observableQueryFields() {\n    const observable = this.currentObservable.query!;\n    return {\n      variables: observable.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore,\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import { useContext, useEffect, useReducer, useRef } from 'react';\nimport {\n  getApolloContext,\n  OperationVariables,\n  QueryResult,\n} from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions, QueryOptions, QueryTuple } from '../types';\nimport { QueryData } from '../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer((x) => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData =\n    queryDataRef.current ||\n    new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        if (!queryData.ssrInitiated()) {\n          // When new data is received from the `QueryData` object, we want to\n          // force a re-render to make sure the new data is displayed. We can't\n          // force that re-render if we're already rendering however so to be\n          // safe we'll trigger the re-render in a microtask.\n          Promise.resolve().then(forceUpdate);\n        } else {\n          // If we're rendering on the server side we can force an update at\n          // any point.\n          forceUpdate();\n        }\n      },\n    });\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // SSR won't trigger the effect hook below that stores the current\n  // `QueryData` instance for future renders, so we'll handle that here if\n  // the current render is happening server side.\n  if (queryData.ssrInitiated() && !queryDataRef.current) {\n    queryDataRef.current = queryData;\n  }\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: { ...updatedOptions, onError: undefined, onCompleted: undefined },\n    context,\n    tick,\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  useEffect(() => {\n    // We only need one instance of the `QueryData` class, so we'll store it\n    // as a ref to make it available on subsequent renders.\n    if (!queryDataRef.current) {\n      queryDataRef.current = queryData;\n    }\n\n    return () => queryData.cleanup();\n  }, []);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data,\n  ]);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal as isEqual } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import { OperationVariables, QueryResult } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { QueryHookOptions } from './types';\nimport { useBaseQuery } from './utils/useBaseQuery';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n","import { ApolloError } from 'apollo-client';\nimport { equal as isEqual } from '@wry/equality';\nimport {\n  ApolloContextValue,\n  DocumentType,\n  OperationVariables,\n  ExecutionResult,\n  MutationFunctionOptions,\n  MutationResult\n} from '@apollo/react-common';\n\nimport { MutationOptions, MutationTuple } from '../types';\nimport { OperationData } from './OperationData';\n\nexport class MutationData<\n  TData = any,\n  TVariables = OperationVariables\n> extends OperationData {\n  private mostRecentMutationId: number;\n  private result: MutationResult<TData>;\n  private previousResult?: MutationResult<TData>;\n  private setResult: (result: MutationResult<TData>) => any;\n\n  constructor({\n    options,\n    context,\n    result,\n    setResult\n  }: {\n    options: MutationOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    result: MutationResult<TData>;\n    setResult: (result: MutationResult<TData>) => any;\n  }) {\n    super(options, context);\n    this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n    this.result = result;\n    this.setResult = setResult;\n    this.mostRecentMutationId = 0;\n  }\n\n  public execute(result: MutationResult<TData>) {\n    this.isMounted = true;\n    this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n    result.client = this.refreshClient().client;\n    return [this.runMutation, result] as MutationTuple<TData, TVariables>;\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    // No cleanup required.\n  }\n\n  private runMutation = (\n    mutationFunctionOptions: MutationFunctionOptions<\n      TData,\n      TVariables\n    > = {} as MutationFunctionOptions<TData, TVariables>\n  ) => {\n    this.onMutationStart();\n    const mutationId = this.generateNewMutationId();\n\n    return this.mutate(mutationFunctionOptions)\n      .then((response: ExecutionResult<TData>) => {\n        this.onMutationCompleted(response, mutationId);\n        return response;\n      })\n      .catch((error: ApolloError) => {\n        this.onMutationError(error, mutationId);\n        if (!this.getOptions().onError) throw error;\n      });\n  };\n\n  private mutate(\n    mutationFunctionOptions: MutationFunctionOptions<TData, TVariables>\n  ) {\n    const {\n      mutation,\n      variables,\n      optimisticResponse,\n      update,\n      context: mutationContext = {},\n      awaitRefetchQueries = false,\n      fetchPolicy\n    } = this.getOptions();\n    const mutateOptions = { ...mutationFunctionOptions };\n\n    const mutateVariables = Object.assign(\n      {},\n      variables,\n      mutateOptions.variables\n    );\n    delete mutateOptions.variables;\n\n    return this.refreshClient().client.mutate({\n      mutation,\n      optimisticResponse,\n      refetchQueries:\n        mutateOptions.refetchQueries || this.getOptions().refetchQueries,\n      awaitRefetchQueries,\n      update,\n      context: mutationContext,\n      fetchPolicy,\n      variables: mutateVariables,\n      ...mutateOptions\n    });\n  }\n\n  private onMutationStart() {\n    if (!this.result.loading && !this.getOptions().ignoreResults) {\n      this.updateResult({\n        loading: true,\n        error: undefined,\n        data: undefined,\n        called: true\n      });\n    }\n  }\n\n  private onMutationCompleted(\n    response: ExecutionResult<TData>,\n    mutationId: number\n  ) {\n    const { onCompleted, ignoreResults } = this.getOptions();\n\n    const { data, errors } = response;\n    const error =\n      errors && errors.length > 0\n        ? new ApolloError({ graphQLErrors: errors })\n        : undefined;\n\n    const callOncomplete = () =>\n      onCompleted ? onCompleted(data as TData) : null;\n\n    if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n      this.updateResult({\n        called: true,\n        loading: false,\n        data,\n        error\n      });\n    }\n    callOncomplete();\n  }\n\n  private onMutationError(error: ApolloError, mutationId: number) {\n    const { onError } = this.getOptions();\n\n    if (this.isMostRecentMutation(mutationId)) {\n      this.updateResult({\n        loading: false,\n        error,\n        data: undefined,\n        called: true\n      });\n    }\n\n    if (onError) {\n      onError(error);\n    }\n  }\n\n  private generateNewMutationId(): number {\n    return ++this.mostRecentMutationId;\n  }\n\n  private isMostRecentMutation(mutationId: number) {\n    return this.mostRecentMutationId === mutationId;\n  }\n\n  private updateResult(result: MutationResult<TData>) {\n    if (\n      this.isMounted &&\n      (!this.previousResult || !isEqual(this.previousResult, result))\n    ) {\n      this.setResult(result);\n      this.previousResult = result;\n    }\n  }\n}\n","import { useContext, useState, useRef, useEffect } from 'react';\nimport { getApolloContext, OperationVariables } from '@apollo/react-common';\nimport { DocumentNode } from 'graphql';\n\nimport { MutationHookOptions, MutationTuple } from './types';\nimport { MutationData } from './data/MutationData';\n\nexport function useMutation<TData = any, TVariables = OperationVariables>(\n  mutation: DocumentNode,\n  options?: MutationHookOptions<TData, TVariables>\n): MutationTuple<TData, TVariables> {\n  const context = useContext(getApolloContext());\n  const [result, setResult] = useState({ called: false, loading: false });\n  const updatedOptions = options ? { ...options, mutation } : { mutation };\n\n  const mutationDataRef = useRef<MutationData<TData, TVariables>>();\n  function getMutationDataRef() {\n    if (!mutationDataRef.current) {\n      mutationDataRef.current = new MutationData<TData, TVariables>({\n        options: updatedOptions,\n        context,\n        result,\n        setResult\n      });\n    }\n    return mutationDataRef.current;\n  }\n\n  const mutationData = getMutationDataRef();\n  mutationData.setOptions(updatedOptions);\n  mutationData.context = context;\n\n  useEffect(() => mutationData.afterExecute());\n\n  return mutationData.execute(result);\n}\n","import { equal as isEqual } from '@wry/equality';\nimport { ApolloContextValue, SubscriptionResult } from '@apollo/react-common';\n\nimport { OperationData } from './OperationData';\nimport { SubscriptionCurrentObservable, SubscriptionOptions } from '../types';\n\nexport class SubscriptionData<\n  TData = any,\n  TVariables = any\n> extends OperationData<SubscriptionOptions<TData, TVariables>> {\n  private setResult: any;\n  private currentObservable: SubscriptionCurrentObservable = {};\n\n  constructor({\n    options,\n    context,\n    setResult\n  }: {\n    options: SubscriptionOptions<TData, TVariables>;\n    context: ApolloContextValue;\n    setResult: any;\n  }) {\n    super(options, context);\n    this.setResult = setResult;\n    this.initialize(options);\n  }\n\n  public execute(result: SubscriptionResult<TData>) {\n    if (this.getOptions().skip === true) {\n      this.cleanup();\n      return {\n        loading: false,\n        error: undefined,\n        data: undefined,\n        variables: this.getOptions().variables\n      };\n    }\n\n    let currentResult = result;\n    if (this.refreshClient().isNew) {\n      currentResult = this.getLoadingResult();\n    }\n\n    let { shouldResubscribe } = this.getOptions();\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(this.getOptions());\n    }\n\n    if (\n      shouldResubscribe !== false &&\n      this.previousOptions &&\n      Object.keys(this.previousOptions).length > 0 &&\n      (this.previousOptions.subscription !== this.getOptions().subscription ||\n        !isEqual(this.previousOptions.variables, this.getOptions().variables) ||\n        this.previousOptions.skip !== this.getOptions().skip)\n    ) {\n      this.cleanup();\n      currentResult = this.getLoadingResult();\n    }\n\n    this.initialize(this.getOptions());\n    this.startSubscription();\n\n    this.previousOptions = this.getOptions();\n    return { ...currentResult, variables: this.getOptions().variables };\n  }\n\n  public afterExecute() {\n    this.isMounted = true;\n  }\n\n  public cleanup() {\n    this.endSubscription();\n    delete this.currentObservable.query;\n  }\n\n  private initialize(options: SubscriptionOptions<TData, TVariables>) {\n    if (this.currentObservable.query || this.getOptions().skip === true) return;\n    this.currentObservable.query = this.refreshClient().client.subscribe({\n      query: options.subscription,\n      variables: options.variables,\n      fetchPolicy: options.fetchPolicy\n    });\n  }\n\n  private startSubscription() {\n    if (this.currentObservable.subscription) return;\n    this.currentObservable.subscription = this.currentObservable.query!.subscribe(\n      {\n        next: this.updateCurrentData.bind(this),\n        error: this.updateError.bind(this),\n        complete: this.completeSubscription.bind(this)\n      }\n    );\n  }\n\n  private getLoadingResult() {\n    return {\n      loading: true,\n      error: undefined,\n      data: undefined\n    };\n  }\n\n  private updateResult(result: SubscriptionResult) {\n    if (this.isMounted) {\n      this.setResult(result);\n    }\n  }\n\n  private updateCurrentData(result: SubscriptionResult<TData>) {\n    const { onSubscriptionData } = this.getOptions();\n\n    this.updateResult({\n      data: result.data,\n      loading: false,\n      error: undefined\n    });\n\n    if (onSubscriptionData) {\n      onSubscriptionData({\n        client: this.refreshClient().client,\n        subscriptionData: result\n      });\n    }\n  }\n\n  private updateError(error: any) {\n    this.updateResult({\n      error,\n      loading: false\n    });\n  }\n\n  private completeSubscription() {\n    const { onSubscriptionComplete } = this.getOptions();\n    if (onSubscriptionComplete) onSubscriptionComplete();\n    this.endSubscription();\n  }\n\n  private endSubscription() {\n    if (this.currentObservable.subscription) {\n      this.currentObservable.subscription.unsubscribe();\n      delete this.currentObservable.subscription;\n    }\n  }\n}\n","import { ObservableQuery } from 'apollo-client';\nimport { QueryOptions } from '../types';\nimport { DocumentNode } from 'graphql';\nimport { QueryData } from '../data/QueryData';\n\ntype QueryInfo = {\n  seen: boolean;\n  observable: ObservableQuery<any, any> | null;\n};\n\nfunction makeDefaultQueryInfo(): QueryInfo {\n  return {\n    seen: false,\n    observable: null\n  };\n}\n\nexport class RenderPromises {\n  // Map from Query component instances to pending fetchData promises.\n  private queryPromises = new Map<QueryOptions<any, any>, Promise<any>>();\n\n  // Two-layered map from (query document, stringified variables) to QueryInfo\n  // objects. These QueryInfo objects are intended to survive through the whole\n  // getMarkupFromTree process, whereas specific Query instances do not survive\n  // beyond a single call to renderToStaticMarkup.\n  private queryInfoTrie = new Map<DocumentNode, Map<string, QueryInfo>>();\n\n  // Registers the server side rendered observable.\n  public registerSSRObservable<TData, TVariables>(\n    observable: ObservableQuery<any, TVariables>,\n    props: QueryOptions<TData, TVariables>\n  ) {\n    this.lookupQueryInfo(props).observable = observable;\n  }\n\n  // Get's the cached observable that matches the SSR Query instances query and variables.\n  public getSSRObservable<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ) {\n    return this.lookupQueryInfo(props).observable;\n  }\n\n  public addQueryPromise<TData, TVariables>(\n    queryInstance: QueryData<TData, TVariables>,\n    finish: () => React.ReactNode\n  ): React.ReactNode {\n    const info = this.lookupQueryInfo(queryInstance.getOptions());\n    if (!info.seen) {\n      this.queryPromises.set(\n        queryInstance.getOptions(),\n        new Promise(resolve => {\n          resolve(queryInstance.fetchData());\n        })\n      );\n      // Render null to abandon this subtree for this rendering, so that we\n      // can wait for the data to arrive.\n      return null;\n    }\n    return finish();\n  }\n\n  public hasPromises() {\n    return this.queryPromises.size > 0;\n  }\n\n  public consumeAndAwaitPromises() {\n    const promises: Promise<any>[] = [];\n    this.queryPromises.forEach((promise, queryInstance) => {\n      // Make sure we never try to call fetchData for this query document and\n      // these variables again. Since the queryInstance objects change with\n      // every rendering, deduplicating them by query and variables is the\n      // best we can do. If a different Query component happens to have the\n      // same query document and variables, it will be immediately rendered\n      // by calling finish() in addQueryPromise, which could result in the\n      // rendering of an unwanted loading state, but that's not nearly as bad\n      // as getting stuck in an infinite rendering loop because we kept calling\n      // queryInstance.fetchData for the same Query component indefinitely.\n      this.lookupQueryInfo(queryInstance).seen = true;\n      promises.push(promise);\n    });\n    this.queryPromises.clear();\n    return Promise.all(promises);\n  }\n\n  private lookupQueryInfo<TData, TVariables>(\n    props: QueryOptions<TData, TVariables>\n  ): QueryInfo {\n    const { queryInfoTrie } = this;\n    const { query, variables } = props;\n    const varMap = queryInfoTrie.get(query) || new Map<string, QueryInfo>();\n    if (!queryInfoTrie.has(query)) queryInfoTrie.set(query, varMap);\n    const variablesString = JSON.stringify(variables);\n    const info = varMap.get(variablesString) || makeDefaultQueryInfo();\n    if (!varMap.has(variablesString)) varMap.set(variablesString, info);\n    return info;\n  }\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"sourceRoot":""}